apiVersion: v1
kind: Service
metadata:
  name: sm
  labels:
    app: sm
spec:
  ports:
  - port: 7077
    name: master-port
  - port: 8080
    name: master-ui
  clusterIP: None
  selector:
    app: sm
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: sm
spec:
  serviceName: sm
  replicas: {{ sm_replicas }}
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: sm
  template:
    metadata:
      labels:
        app: sm
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - sm
              topologyKey: "kubernetes.io/hostname"
      containers:
      - name: sm
        imagePullPolicy: Always
        image: dckreg:5000/spark:{{ spark_version }}
        ports:
        - containerPort: 7077
          name: master-port
        - containerPort: 8080
          name: master-ui
        command:
        - sh
        - -c
        - sh /tmp/spark-configmap/spark-configmap.sh && startspark.sh
        env:
        - name: MODE
          value: "master"
        - name: SPARK_MASTER_IP
          value: "sm-0.sm"
        - name: SPARK_LOCAL_DIRS
          value: "/data/spark/data"
        - name: SPARK_WORKER_DIR
          value: "/data/spark/work"
        - name: SPARK_MASTER_WEBUI_PORT
          value: "8080"
        - name: SPARK_DAEMON_JAVA_OPTS
          value: "-Dspark.deploy.recoveryMode=FILESYSTEM -Dspark.deploy.recoveryDirectory=/data/spark/recovery"
        - name: ZK_LIST
          value: "{{ zk_list }}"
        - name: KAFKA_BROKER_LIST
          value: "{{ kafka_broker_list }}"
        volumeMounts:
        - name: datadir
          mountPath: /data
        - name: spark-configmap
          mountPath: /tmp/spark-configmap
        - name: spark-env
          mountPath: /tmp/spark-env
        - name: hdfs-site
          mountPath: /tmp/hdfs
        - name: core-site
          mountPath: /tmp/core
      volumes:
        - name: spark-configmap
          configMap:
             name: spark-configmap
             items:
              - key: config
                path: spark-configmap.sh
        - name: spark-env
          configMap:
             name: spark-env
             items:
              - key: config
                path: spark-env.sh
        - name: hdfs-site
          configMap:
             name: hdfs-site
             items:
              - key: config
                path: hdfs-site.xml
        - name: core-site
          configMap:
             name: core-site
             items:
              - key: config
                path: care-site.xml
  volumeClaimTemplates:
  - metadata:
      name: datadir
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ storage_class }}
      resources:
        requests:
          storage: {{ sm_disk }}
