apiVersion: v1
kind: Service
metadata:
  name: dfsrs
  labels:
    app: dfsrs
spec:
  ports:
  - port: 16020
    name: rs-port 
  - port: 16030
    name: rs-info-port
  - port: 50075
    name: datanodeweb
  - port: 50010
    name: datatrnsfr
  - port: 50020
    name: metadata
  clusterIP: None
  selector:
    app: dfsrs
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: dfsrs
spec:
  serviceName: dfsrs
  replicas: {{ dn_replicas }}
  template:
    metadata:
      labels:
        app: dfsrs
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '7071'
        pod.alpha.kubernetes.io/initialized: "true"
        scheduler.alpha.kubernetes.io/affinity: >
            {
              "podAntiAffinity": {
                "requiredDuringSchedulingRequiredDuringExecution": [{
                  "labelSelector": {
                    "matchExpressions": [{
                      "key": "app",
                      "operator": "In",
                      "values": ["dfsrs"]
                    }]
                  },
                  "topologyKey": "kubernetes.io/hostname"
                }]
              }
            }
    spec:
      containers:
        - name: dn
          imagePullPolicy: Always
          image: dckreg:5000/hdfs:{{ hadoop_version }}
          ports:
          - containerPort: 50075
            name: datanodeweb
          - containerPort: 50010
            name: datatrnsfr
          - containerPort: 50020
            name: metadata
          env:
          - name: DFS_REPLICATION
            value: "{{ dfs_replication }}"
          command:
          - sh
          - -c
          - datanode.sh
          volumeMounts:
          - name: datadir
            mountPath: /data
        - name: rs
          imagePullPolicy: Always
          image: dckreg:5000/hbase:{{ hbase_version }}
          ports:
          - containerPort: 16020
            name: rs-port
          - containerPort: 16030
            name: rs-info-port
          - containerPort: 50075
            name: datanodeweb
          - containerPort: 50010
            name: datatrnsfr
          - containerPort: 50020
            name: metadata
          - containerPort: 7071
            name: prometheus
          env:
          - name: MODE
            value: "rs"
          - name: ZK_LIST
            value: "{{ zk_list }}"
          - name: DFS_REPLICATION
            value: "{{ dfs_replication }}"
          command:
          - sh
          - -c
          - starthbase.sh
  volumeClaimTemplates:
  - metadata:
      name: datadir
      {{ pv_annotations }}
         {{ pv_annotations_line }}
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ dn_disk }}
