apiVersion: v1
kind: Service
metadata:
  name: dn
  labels:
    app: dn
spec:
  ports:
  - port: 50075
    name: datanodeweb 
  - port: 50010
    name: datatrnsfr
  - port: 50020
    name: metadata
  clusterIP: None
  selector:
    app: dn
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: dn-pdb
spec:
  selector:
    matchLabels:
      app: dn
  maxUnavailable: 1
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: dn
spec:
  serviceName: dn
  replicas: {{ dn_replicas }}
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: dn
  template:
    metadata:
      labels:
        app: dn
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - dn
              topologyKey: "kubernetes.io/hostname"
      containers:
      - name: dn
        imagePullPolicy: Always
        image: dckreg:5000/hadoop:{{ hadoop_version }}
        ports:
        - containerPort: 50075
          name: datanodeweb
        - containerPort: 50010
          name: datatrnsfr
        - containerPort: 50020
          name: metadata
        env:
        - name: DFS_REPLICATION
          value: "{{ dfs_replication }}"
        command:
        - sh
        - -c
        -  sh /tmp/hdfs-configmap/hdfs-configmap.sh && datanode.sh && sudo -Eu hdfs $HADOOP_HOME/bin/hdfs datanode
        volumeMounts:
        - name: datadir
          mountPath: /data
        - name: hdfs-site
          mountPath: /tmp/hdfs
        - name: core-site
          mountPath: /tmp/core
        - name: hdfs-configmap
          mountPath: /tmp/hdfs-configmap
      volumes:
        - name: hdfs-configmap
          configMap:
             name: hdfs-configmap
             items:
              - key: config
                path: hdfs-configmap.sh
        - name: hdfs-site
          configMap:
             name: hdfs-site
             items:
              - key: config
                path: hdfs-site.xml
        - name: core-site
          configMap:
             name: core-site
             items:
              - key: config
                path: care-site.xml
  volumeClaimTemplates:
  - metadata:
      name: datadir
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ storage_class }}
      resources:
        requests:
          storage: {{ dn_disk }}
